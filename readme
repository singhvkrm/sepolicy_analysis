
(C) Copyright 2016 Vit Mojzis, vmojzis@redhat.com

This program is distributed under the terms of the GNU General Public License

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

Purpose:
	* Automated search for specified permission pathways
		- Overly relaxed policy modules
		- Unintended side effects of attribute/macro use
		- Unforeseen module interactions
		- Alternative for neverallow rules
			> More complicated relationships
			> Allows for exceptions

	* Regression testing
		- Comparison of policy versions 
		- Alternative for sediff
			> Shows only specified differences
			> More resource effective

	* CVE evaluation (work in progress)
		- Does SELinux stop the threat in current configuration?
		- Which rules are necessary for the CVE to be exploitable
			> Removal of any of them would stop the treat


Dependencies:
	setools 4 (installed using python3)
		setuptools
		libselinux (Python bindings optional but recommended)
		python3
		libbz2
		bzip2-devel
		setools
		selinux-policy-devel
		libsepol-static
		python3-networkx
		PyQt5 (only if using graphical tools)
		python3-PyQt5
		redhat-rpm-config (qpol compilation)

Installation:
	You need to have SETools v4 package (locally) installed including all dependencies (using python 3). Use commit faaf1a5b64e2e596bf94e5d31e81e834f1d5f764 or older (newer versions are not tested with this project).

		- https://github.com/TresysTechnology/setools

	SETools v4 should be inside this project folder under "setools" 
		- otherwise edit the include statement in "policy_data_collection.py"

	$cd sepolicy_analysis
	$git clone https://github.com/TresysTechnology/setools.git
	$git checkout faaf1a5b64e2e596bf94e5d31e81e834f1d5f764

	$sudo python3 setup.py build_ext -i

	
Tools:
	visual_query.py - generates graphs representing selected part of policy (single source/target) - graph.pdf

	export_graph.py - exports part of policy graph corresponding to given service (compatible with gephi)

	build_graph.py - create policy graph as a base for analysis

	graph_query.py - policy analysis tool


	Recommended pdf viewer for visual_query output is Okular (fast, deep zoom)

Examples:
	$./visual_query.py -s bluetooth_t -c file -fa domain,daemon -dg

	$./build_graph.py -fb -c file,process data/graph_3.13.1-158.16 -p policy_data/selinux-policy-targeted-3.13.1-158.16/policy.29

	$./graph_query.py data/graph_3.13.1-158.16 write_executable,transition_write,write_to_security,append_to_security


Domain grouping (Done automatically by extract_cil.sh):
	* Get cil files from /var/lib/selinux/targeted/active/modules/100/<module_name>/cil, extract them,
	  and save them in a directory as <module_name>.cil

	* Run domain_grouping.parse_cil_files(path_cil_files) and save result to domain_groups_cil.conf
	  (contains colon-separated triples "group_name:domain_types:resource_types")
